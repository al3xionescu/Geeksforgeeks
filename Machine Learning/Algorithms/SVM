Support vector machines (SVMs, also support vector networks) are supervised learning models with associated learning algorithms that 
analyze data used for classification and regression analysis. 

An SVM model is a representation of the examples as points in space, mapped so that the examples of the separate categories are divided by 
a clear gap that is as wide as possible.
In addition to performing linear classification, SVMs can efficiently perform a non-linear classification, implicitly mapping their inputs 
into high-dimensional feature spaces.

Given a set of training examples, each marked as belonging to one or the other of two categories, an SVM training algorithm builds a model
that assigns new examples to one category or the other, making it a non-probabilistic binary linear classifier.


from sklearn.datasets.samples_generator import make_blobs
import matplotlib.pyplot as plt
import numpy as np

X, Y = make_blobs(n_samples=500, centers=2,
                  random_state=0, cluster_std=0.40)
 
plt.scatter(X[:, 0], X[:, 1], c=Y, s=50, cmap='spring');
plt.show() 
xfit = np.linspace(-1, 3.5)
plt.scatter(X[:, 0], X[:, 1], c=Y, s=50, cmap='spring')
for m, b, d in [(1, 0.65, 0.33), (0.5, 1.6, 0.55), (-0.2, 2.9, 0.2)]:
    yfit = m * xfit + b
    plt.plot(xfit, yfit, '-k')
    plt.fill_between(xfit, yfit-d, yfit+d, edgecolor='none', 
    color='#AAAAAA', alpha=0.4)
plt.xlim(-1,3.5);
plt.show()
